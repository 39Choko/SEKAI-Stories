import { Dispatch, SetStateAction } from "react";
import * as PIXI from "pixi.js";
import IModel from "./IModel";
import IBackground from "./IBackground";
import IText from "./IText";
import ISceneSetting from "./ISceneSetting";
import IGuideline from "./IGuideline";
import { IJsonSave } from "./IJsonSave";
export default interface ISceneContextType {
    app: PIXI.Application | undefined;
    setApp: Dispatch<SetStateAction<PIXI.Application | undefined>>;
    models: Record<string, IModel> | undefined;
    setModels: Dispatch<SetStateAction<Record<string, IModel> | undefined>>;
    layers: number;
    setLayers: Dispatch<SetStateAction<number>>;
    nextLayer: number;
    setNextLayer: Dispatch<SetStateAction<number>>;
    currentKey: string;
    setCurrentKey: Dispatch<SetStateAction<string>>;
    currentModel: IModel | undefined;
    setCurrentModel: Dispatch<SetStateAction<IModel | undefined>>;
    modelContainer: PIXI.Container | undefined;
    setModelContainer: Dispatch<SetStateAction<PIXI.Container | undefined>>;
    background: IBackground | undefined;
    setBackground: Dispatch<SetStateAction<IBackground | undefined>>;
    text: IText | undefined;
    setText: Dispatch<SetStateAction<IText | undefined>>;
    sceneSetting: ISceneSetting | undefined;
    setSceneSetting: Dispatch<SetStateAction<ISceneSetting | undefined>>;
    sceneJson: IJsonSave | undefined;
    setSceneJson: Dispatch<SetStateAction<IJsonSave | undefined>>;
    guideline: IGuideline | undefined;
    setGuideline: Dispatch<SetStateAction<IGuideline | undefined>>;
    reset: number;
    setReset: Dispatch<SetStateAction<number>>;
    startingMessage: string;
    setStartingMessage: Dispatch<SetStateAction<string>>;
}
